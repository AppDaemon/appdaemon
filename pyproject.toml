[project]
name = "appdaemon"
description="Apps for the Home Assistant home automation package."
readme = "README.md"
authors = [
    {name = "Andrew I Cockburn", email = "appdaemon@acockburn.com"},
]
dynamic = ["version"] # The verison is computed dynamically. See `tool.setuptools.dynamic` section below.
license= { file = "LICENSE.md" }
requires-python = ">=3.10,<3.13"
keywords=[ "appdaemon", "home", "automation" ]
dependencies = [
    'aiohttp>=3.9.0',
    'aiohttp_jinja2>=1.5.1',
    'astral>=3.2',
    'bcrypt>=4.0.1',
    'deepdiff>=8.2.0',
    'feedparser>=6.0.10',
    'iso8601>=1.1',
    'paho-mqtt>=1.6.12.2.0',
    "pid>=3.0.4",
    'python-dateutil>=2.8.2',
    'python-socketio>=5.5',
    'pytz>=2022.7.1',
    'pyyaml>=6.0.1',
    'requests>=2.28.2',
    'sockjs>=0.11',
    'uvloop>=0.21.0; sys_platform != "win32"',
    'tomli>=2.2.1',
    'tomli_w>=1.0',
    'pydantic>=2.10.6',
]

classifiers= [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Natural Language :: English",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Home Automation",
]

[project.urls]
documentation = "https://appdaemon.readthedocs.io"
repository = "https://github.com/AppDaemon"
changelog = "https://github.com/AppDaemon/appdaemon/blob/master/docs/HISTORY.rst"

# https://docs.astral.sh/uv/concepts/projects/dependencies/#optional-dependencies
[project.optional-dependencies]
doc = [ # Dependencies required to build the documentation using sphinx
    "sphinx>=8.1.3",
    "sphinx-autobuild>=2024.10.3",
    "sphinx-rtd-theme>=3.0.2",
    "myst-parser>=4.0.0",
]

# Define the main CLI script
[project.scripts]
appdaemon = "appdaemon.__main__:main"

# Use setuptools as the build system
[build-system]
requires = ["setuptools >= 61.0.0"]
build-backend = "setuptools.build_meta"

# Tell setuptools how to find the package source files
# https://setuptools.pypa.io/en/latest/userguide/package_discovery.html
[tool.setuptools.packages.find]
exclude = ["contrib", "docs", "docs.*", "tests*"]

# Dynamically read version from version.py module
# https://setuptools.pypa.io/en/latest/userguide/pyproject_config.html#dynamic-metadata
[tool.setuptools.dynamic]
version = {attr = "appdaemon.version.__version__"}

# Taken from: https://docs.pytest.org/en/7.1.x/explanation/goodpractices.html
[tool.pytest.ini_options]
addopts = [
    "--import-mode=importlib",
]

# black configuration
[tool.black]
line-length = 120

# Ruff

[tool.ruff]

src = ["appdaemon"]

# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".devenv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]

line-length = 200
indent-width = 4

# Assume Python 3.10.
target-version = "py310"

# Enable pycodestyle (`E`) and Pyflakes (`F`) codes by default.
lint.select = ["E", "F"]
# lint.extend-select = ["I"]
lint.ignore = []

# Allow autofix for all enabled rules (when `--fix`) is provided.
lint.fixable = ["E", "F", "UP"]
# lint.extend-fixable = ["I"]
lint.unfixable = []

# Allow unused variables when underscore-prefixed.
lint.dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

lint.per-file-ignores = {}

[tool.ruff.lint.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 10

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
docstring-code-format = false

# https://docs.astral.sh/uv/concepts/projects/dependencies/#development-dependencies
[dependency-groups]
dev = [
    "build>=1.2.2.post1",
    "gitpython>=3.1.44",
    "ipykernel>=6.29.5",
    "notebook>=7.4.2",
    "pre-commit>=4.2.0",
    "pytest>=8.3.5",
    "rich>=14.0.0",
    "ruff>=0.11.10",
]
