# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python lint and tests

on:
  push:
  pull_request:
    branches: ["dev"]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    # https://github.com/actions/setup-python
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        cache: 'pip' # caching pip dependencies
        # Manually set pyproject.toml as the file to use for dependencies
        # Workaround while waiting for https://github.com/actions/setup-python/issues/529
        cache-dependency-path: 'pyproject.toml'
    - name: Run pre-commit
      uses: pre-commit/action@v3.0.0
    - uses: pre-commit-ci/lite-action@v1.0.1
      if: always()

  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11"]

    steps:
    - uses: actions/checkout@v3
    # https://github.com/actions/setup-python
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip' # caching pip dependencies
        # Manually set 'dev-requirements.txt' as the file to use for dependencies, since `requirements.txt` contains runtime dependencies.
        cache-dependency-path: 'dev-requirements.txt'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r dev-requirements.txt
    - name: Test with pytest
      run: |
        python -m pytest
